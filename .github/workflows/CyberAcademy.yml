name: HTML CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  dockerize:
    name: Build and Push Docker Image
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/home-html -f Portfolio-site/Site/Dockerfile ./Portfolio-site/Site

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/home-html

  deploy_to_ec2:
    name: Deploy to EC2 and Restart HTML App
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST_ADDRESS }} >> ~/.ssh/known_hosts

      - name: Debug SSH Key
        run: |
          echo "ðŸ”‘ First two lines of SSH key:"
          head -n 2 ~/.ssh/id_rsa
          echo "ðŸ”‘ Last line of SSH key:"
          tail -n 1 ~/.ssh/id_rsa
          echo "âœ… If you see 'BEGIN' and 'END', formatting is correct."

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST_ADDRESS }} \
            "echo 'SSH Connection Successful âœ…'"

      - name: Deploy Docker Container
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST_ADDRESS }} << 'EOF'
              echo "Stopping existing container (if any)..."
              sudo docker stop html_container || true
              sudo docker rm html_container || true

              echo "Logging into Docker Hub..."
              echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

              echo "Pulling latest image..."
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/home-html

              echo "Running new container..."
              sudo docker run -d \
                --name html_container \
                -p 80:80 \
                ${{ secrets.DOCKER_USERNAME }}/home-html

              echo "âœ… Deployment successful!"
          EOF
