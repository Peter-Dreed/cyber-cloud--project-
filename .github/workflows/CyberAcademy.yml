name: Self-Hosted CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_app:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/home-html -f Portfolio-site/Site/Dockerfile ./Portfolio-site/Site

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/home-html

  deploy_to_ec2:
    name: Deploy to EC2
    needs: build_app
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/springboot_key.pem
          chmod 600 ~/.ssh/springboot_key.pem
          ssh-keyscan -H ${{ secrets.HOST_ADDRESS }} >> ~/.ssh/known_hosts

      - name: Deploy Docker Container on EC2
        run: |
          ssh -i ~/.ssh/springboot_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST_ADDRESS }} << 'EOF'
            echo "🚀 Stopping old container..."
            docker stop home_html || true
            docker rm home_html || true

            echo "🔑 Logging into Docker Hub..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "⬇️ Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/home-html

            echo "📦 Running new container..."
            docker run -d --name home_html -p 8081:80 ${{ secrets.DOCKER_USERNAME }}/home-html

            echo "✅ Deployment successful!"
          EOF
